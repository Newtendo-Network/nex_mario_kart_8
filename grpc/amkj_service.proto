syntax = "proto3";

package amkj;

option go_package = "./;grpc_amkj";

import "google/protobuf/timestamp.proto";

service AmkjService {
    rpc GetServerStatus(GetServerStatusRequest) returns (GetServerStatusResponse) {}

    rpc StartMaintenance(StartMaintenanceRequest) returns (StartMaintenanceResponse) {}
    rpc EndMaintenance(EndMaintenanceRequest) returns (EndMaintenanceResponse) {}

    rpc ToggleWhitelist(ToggleWhitelistRequest) returns (ToggleWhitelistResponse) {}
    rpc GetWhitelist(GetWhitelistRequest) returns (GetWhitelistResponse) {}
    rpc AddWhitelistUser(AddWhitelistUserRequest) returns (AddWhitelistUserResponse) {}
    rpc DelWhitelistUser(DelWhitelistUserRequest) returns (DelWhitelistUserResponse) {}

    rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse) {}
    rpc KickUser(KickUserRequest) returns (KickUserResponse) {}
    rpc KickAllUsers(KickAllUsersRequest) returns (KickAllUsersResponse) {}

    rpc GetAllGatherings(GetAllGatheringsRequest) returns (GetAllGatheringsResponse) {}
    rpc GetAllTournaments(GetAllTournamentsRequest) returns (GetAllTournamentsResponse) {}

    rpc GetUnlocks(GetUnlocksRequest) returns (GetUnlocksResponse) {}

    rpc GetTimeTrialRanking(GetTimeTrialRankingRequest) returns (GetTimeTrialRankingResponse) {}

    rpc DeleteTimeTrialRanking(DeleteTimeTrialRankingRequest) returns (DeleteTimeTrialRankingResponse) {}
    rpc DeleteAllTimeTrialRankings(DeleteAllTimeTrialRankingsRequest) returns (DeleteAllTimeTrialRankingsResponse) {}

    rpc IssueBan(IssueBanRequest) returns (IssueBanResponse) {}
    rpc ClearBan(ClearBanRequest) returns (ClearBanResponse) {}
    rpc GetAllBans(GetAllBansRequest) returns (GetAllBansResponse) {}
}

// ========================================================

message GetServerStatusRequest {}
message GetServerStatusResponse {
    bool is_online = 1;
    bool is_maintenance = 2;
    bool is_whitelist = 3;
    int32 num_clients = 4;
    google.protobuf.Timestamp start_maintenance_time = 5;
    google.protobuf.Timestamp end_maintenance_time = 6;
}

// ========================================================

message StartMaintenanceRequest {
    google.protobuf.Timestamp utc_start_maintenance_time = 1;
    google.protobuf.Timestamp utc_end_maintenance_time = 2;
}
message StartMaintenanceResponse {}

// ========================================================

message EndMaintenanceRequest {}
message EndMaintenanceResponse {}

// ========================================================

message ToggleWhitelistRequest {}
message ToggleWhitelistResponse {
    bool is_whitelist = 1;
}

// ========================================================

message GetWhitelistRequest {}
message GetWhitelistResponse {
    repeated uint32 pids = 1;
}

// ========================================================

message AddWhitelistUserRequest {
    uint32 pid = 1;
}
message AddWhitelistUserResponse {}

// ========================================================

message DelWhitelistUserRequest {
    uint32 pid = 1;
}
message DelWhitelistUserResponse {}

// ========================================================

message GetAllUsersRequest {}
message GetAllUsersResponse {
    repeated uint32 pids = 1;
}

// ========================================================

message KickUserRequest {
    uint32 pid = 1;
}
message KickUserResponse {
    bool was_connected = 1;
}

// ========================================================

message KickAllUsersRequest {}
message KickAllUsersResponse {
    int32 num_kicked = 1;
}

// ========================================================

message GatheringParticipant {
    int64 pid = 1;
    string mii_name = 2;
}

message Gathering {
    uint32 gid = 1;
    uint32 host = 2;
    uint32 owner = 3;
    repeated uint32 attributes = 4;
    uint32 game_mode = 5;
    bytes app_data = 6;
    repeated GatheringParticipant players = 7;
    uint32 min_participants = 8;
    uint32 max_participants = 9;
}

message GetAllGatheringsRequest {
    uint32 offset = 1;
    int32 limit = 2;
}

message GetAllGatheringsResponse {
    repeated Gathering gatherings = 1;
}

// ========================================================

message Tournament {
    uint32 id = 1;
    uint32 owner = 2;
    repeated uint32 attributes = 3;
    string community_code = 4;
    bytes app_data = 5;
    int64 total_participants = 6;
    int64 season_id = 7;
    string name = 8;
    string description = 9;
    string red_team = 10;
    string blue_team = 11;
    uint32 repeat_type = 12;
    uint32 gameset_num = 13;
    uint32 icon_type = 14;
    uint32 battle_time = 15;
    uint32 update_date = 16;
    uint32 start_day_time = 17;
    uint32 end_day_time = 18;
    uint32 start_time = 19;
    uint32 end_time = 20;
    google.protobuf.Timestamp start_date_time = 21;
    google.protobuf.Timestamp end_date_time = 22;
}

message GetAllTournamentsRequest {
    uint32 offset = 1;
    int32 limit = 2;
}
message GetAllTournamentsResponse {
    repeated Tournament tournaments = 1;
}


// ========================================================

message GetUnlocksRequest {
    uint32 pid = 1;
}
message GetUnlocksResponse {
    bool has_data = 1;
    double vr_rate = 2;
    double br_rate = 3;
    google.protobuf.Timestamp last_update = 4; 
    repeated uint32 gp_unlocks = 5;
    repeated uint32 engine_unlocks = 6;
    repeated uint32 driver_unlocks = 7;
    repeated uint32 body_unlocks = 8;
    repeated uint32 tire_unlocks = 9;
    repeated uint32 wing_unlocks = 10;
    repeated uint32 stamp_unlocks = 11;
    repeated uint32 dlc_unlocks = 12;
}

// ========================================================

message TimeTrialRanking {
    uint32 rank = 1;
    google.protobuf.Timestamp datetime = 2;
    uint32 score = 3;
    uint32 pid = 4;
    bytes common_data = 5;
}

message GetTimeTrialRankingRequest {
    uint32 track = 1;
    int32 limit = 2;
    bool asc = 3;
}

message GetTimeTrialRankingResponse {
    repeated TimeTrialRanking rankings = 1;
}

// ========================================================

message DeleteTimeTrialRankingRequest {
    uint32 track = 1;
    uint32 pid = 2;
}

message DeleteTimeTrialRankingResponse {}

// ========================================================

message DeleteAllTimeTrialRankingsRequest {
    uint32 pid = 1;
}

message DeleteAllTimeTrialRankingsResponse {}

// ========================================================

message IssueBanRequest {
    uint32 pid = 1;
    google.protobuf.Timestamp start_time = 2;
    google.protobuf.Timestamp end_time = 3;
    string reason = 4;
}

message IssueBanResponse {}

// ========================================================

message ClearBanRequest {
    uint32 pid = 1;
}

message ClearBanResponse {}

// ========================================================

message Ban {
    uint32 pid = 1;
    google.protobuf.Timestamp start_time = 2;
    google.protobuf.Timestamp end_time = 3;
    string reason = 4;
}

message GetAllBansRequest {
    uint32 offset = 1;
    int32 limit = 2;
}

message GetAllBansResponse {
    repeated Ban bans = 1;
}

// ========================================================
